1) Явно объявляйте все переменные
1. В любом коде на Python, необходимо использовать type hynting, для избежания ошибок и улучшения читаемости для других разработчиков
2. В VSCode активирована отображение неиспользуемых переменных
3. Для Си используется clang-format, преднаписанный, аналогичный используемому в автотестах Школы21 от Сбера

2) Инициализируйте каждую переменную, и делайте это правильно
2.1) Инициализируйте каждую переменную при её объявлении или там, где она используется в первый раз.
Объявляйте переменные по мере возможности как final или const (константы), если они используются только как хранилища часто используемого значения.

Примеры уродливого кода от ChatGPT с объявлением и присвоением временныз значений.
4. # Initialize counter days
days = 0
5.# Initialize counter captured points
captured = 0

2.2) Инициализируйте все без исключения атрибуты/поля класса в его конструкторе.

6. class DynArray:
    def __init__(self):
        self.count = 0
        self.capacity = 16
        self.array = self.make_array(self.capacity)

7. class Node:
    def __init__(self, v):
        self.value = v
        self.next = None


8. class LinkedList:
    def __init__(self):
        self.head = None
        self.tail = None

Инициализация всех без исключения атрибутов/поля класса в его конструкторе, с заменой init, на @dataclass.
9. @dataclass
class Swimming(Training):
    """Тренировка: плавание."""

    weight: float
    length_pool: float
    count_pool: float
    SWM_COEFF_CALORIE_1: ClassVar[float] = 1.1
    SWM_COEFF_CALORIE_2: ClassVar[float] = 2.0
    LEN_STEP: ClassVar[float] = 1.38

4) Переменные и циклы

9. # До данной теории все иниициации счетчиков я инициировал вне цикла:
total = 0
for i in range(10):
    total += i

# После:
# Инициализация счётчика в цикле
for i in range(10):
    total = 0  # Инициализация перед использованием
    total += i

10, 11.
Помимо счетчиков, итераторы и даже, переменные в которых я собирал строки, с присвоением вне цикла и логики.
def wrap_text(text, width):
    wrapped_text = ""
    current_line = ""
    word = ""
    i = 0
    while i < len(text) or word:
        if not word:
            while i < len(text) and text[i] != ' ':
                word += text[i]
                i += 1
            i += 1
            ...

3) Завершение работы с переменными

12. word = "***ERROR***"
13. days = -1
14. captured = -1

5) Инварианты в коде
15.
# До:
def calculate_velocity(distance, time):
    velocity = distance / time
    if velocity < 0:
        print("Warning: Negative velocity detected!")

# После:
def calculate_velocity(distance, time):
    velocity = distance / time
    assert velocity >= 0, "Velocity should be non-negative"  # Проверка инварианта
